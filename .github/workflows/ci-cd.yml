name: Library System CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
    
    - name: Lint Backend
      run: |
        cd backend
        npm run lint || echo "Warning: Linting issues found"
    
    - name: Build Backend
      run: |
        cd backend
        npm run build
    
    - name: Run Backend Tests
      run: |
        cd backend
        npm test
    
    - name: Upload Backend Coverage
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: backend/coverage
  
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint Frontend
      run: |
        cd frontend
        npm run lint || echo "Warning: Linting issues found"
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
    
    - name: Upload Frontend Coverage
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/coverage
  
  deploy:
    name: Deploy to Render
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Backend to Render
      uses: JorgeLNJunior/render-deploy@v1.4.3
      with:
        service_id: srv-d2lgphn5r7bs73dmnvig
        api_key: rnd_qrUmNIBxVDzIAXiFMkKgzAhGMsjM
        wait: true
        deployment_time: 10
    
    # Deploy Frontend to Netlify
    - name: Deploy Frontend to Netlify
      uses: nwtgck/actions-netlify@v2.0.0
      with:
        publish-dir: ./frontend/build
        production-deploy: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    
    - name: Deployment Status
      run: |
        echo "Deployment completed"
        echo "Backend URL: https://library-system-backend-krlv.onrender.com"
        echo "Frontend URL: https://<your-netlify-site>.netlify.app"